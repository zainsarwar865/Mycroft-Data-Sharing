# submodularMutualInformation.py
# Author: Vishal Kaushal <vishal.kaushal@gmail.com>
from .setFunction import SetFunction

class SubmodularMutualInformationFunction(SetFunction):
	"""Implementation of the Submodular Mutual Information (SMI) function
	
	Denote :math:`V` as the ground-set of items to be summarized. We denote by :math:`V^{\\prime}` an auxiliary set that contains user-provided information such as a query (for query-focused summarization) or a private set (for privacy-preserving summarization). The auxiliary information provided by the user may not be in the same space as the items in :math:`V` -- for example, if the items in :math:`V` are images, the query could be text queries. In such a case, we assume we have a *joint* embedding that can represent both the query and the image items, and correspondingly, we can define similarity between the items in :math:`V` and :math:`V^{\\prime}`. Next, let :math:`\\Omega  = V \\cup V^{\\prime}` and define a set function :math:`f: 2^{\\Omega} \\rightarrow \\mathbf{R}`. Although :math:`f` is defined on :math:`\\Omega`, summarization is on the items in :math:`V`, i.e., the discrete optimization problem will be only on subsets of :math:`V`

	We define the submodular mutual information :cite:`guillory2011-active-semisupervised-submodular,levin2020online` between two sets :math:`A,B` as 

	.. math::
			I_f(A; B) = f(A) + f(B) - f(A \\cup B)

	It is easy to see that :math:`I_f(A; B)` is equal to the mutual information between two random variables when :math:`f` is the entropy function.

	.. note::
			I_f(A; B) = f(A) - f(A|B)

	Properties of submodular mutual information are studied at length in :cite:`iyer2021submodular`

	For application in query-focused summarization, :math:`B = Q` where :math:`Q \\subseteq V^{\\prime}` is a query set.

	Some simple properties of SMI which follow almost immediately from definition is that :math:`I_f(A; B) \\geq 0` and :math:`I_f(A; B)` is also monotone in :math:`A` for a fixed :math:`B`. :math:`I_f(A; Q)` models the mutual coverage, or shared information, between :math:`A` and :math:`Q`, and is thus useful for modeling query relevance in query-focused summarization. 
		
	.. note::
			:math:`I_f(A; Q)` is unfortunately not submodular in :math:`A` for a fixed :math:`Q` in general :cite:`krause2008near`.However instantiation of SMI using a particular submodular function may turn out to be submodular.

	Parameters
	----------
	
	f : SetFunction
		The particular instantiated set function to be used for instantiating this Submodular Mutual Information function

	b : set
		The :math:`B` set as defined above. For example, it could be the query set in case of query-focused summarization
	
	"""

	def __init__(self, f, b):
		pass

	